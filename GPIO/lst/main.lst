C51 COMPILER V9.56.0.0   MAIN                                                              08/03/2020 17:49:25 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\output\main.obj
COMPILER INVOKED BY: F:\Keil\C51\BIN\C51.EXE source\main.c OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG PRINT(.\lst\main.lst) TAB
                    -S(2) OBJECT(.\output\main.obj)

line level    source

   1          
   2          #ifndef _MAIN_C_
   3          #define _MAIN_C_
   4          /*********************************************************************************************************
             -************/
   5          #include "include/ca51f_config.h"   
   6          #include "include/ca51f3sfr.h"
   7          #include "include/ca51f3xsfr.h"
   8          #include "include/gpiodef_f3.h"
   9          #include "include/system_clock.h"
  10          
  11          #include "include/uart.h"
  12          #include "include/delay.h"
  13          #include "include/adc.h"
  14          #include <intrins.h>
  15          #include <string.h>
  16          #include <stdarg.h>
  17          #include <stdlib.h>
  18          #include <stdio.h>
  19          #include <absacc.h>
  20          
  21          /*********************************************************************************************************
             -************/
  22          #include "TS_Lib\Includes\ts_configuration.h"
  23          #include "TS_Lib\Includes\ts_def.h"
  24          #include "TS_Lib\Includes\ts_api.h"
  25          #include "TS_Lib\Includes\ts_service.h"      
  26          /*********************************************************************************************************
             -************/
  27          unsigned char read_inner_trim(void)       
  28          {
  29   1        unsigned char value;
  30   1        FSCMD = 0x80; 
  31   1        PTSH  = 0x00;       
  32   1        PTSL  = 0x24;      
  33   1        FSCMD = 0x81;           
  34   1        value = FSDAT;
  35   1        FSCMD = 0;
  36   1        return (value&0x3F);
  37   1      }
  38          
  39          unsigned int get_ntc_ad_value()
  40          {
  41   1        unsigned int AD_Value;
  42   1        ADCON = AST(0) | ADIE(0) | HTME(7) | VSEL(ADC_REF_VDD);       //设置ADC参考电压为VDD
  43   1        ADCFGH = AOPS(NO_AMP) | VTRIM(read_inner_trim());             //加载内部1.5V校准值
  44   1        ADCFGL = ACKD(7) | ADCHS(ADC_CH4);  //选择ADC4通道
  45   1      
  46   1        
  47   1        ADCON |= AST(1);                                //启动ADC转换
  48   1        while(!(ADCON & ADIF));                         //等待ADC转换完成
  49   1        ADCON |= ADIF;                                  //清除ADC中断标志
  50   1        AD_Value = ADCDH*256 + ADCDL;                   //读取AD值
  51   1        AD_Value >>= 4; 
C51 COMPILER V9.56.0.0   MAIN                                                              08/03/2020 17:49:25 PAGE 2   

  52   1        return AD_Value;
  53   1      }
  54          
  55          unsigned int get_bat_ad_value()
  56          {
  57   1        unsigned int AD_Value;
  58   1        ADCON = AST(0) | ADIE(0) | HTME(7) | VSEL(ADC_REF_VDD);       //设置ADC参考电压为VDD
  59   1        ADCFGH = AOPS(NO_AMP) | VTRIM(read_inner_trim());             //加载内部1.5V校准值
  60   1        ADCFGL = ACKD(7) | ADCHS(ADC_CH6);  //选择ADC6通道
  61   1        
  62   1        ADCON |= AST(1);                                //启动ADC转换
  63   1        while(!(ADCON & ADIF));                         //等待ADC转换完成
  64   1        ADCON |= ADIF;                                  //清除ADC中断标志
  65   1        AD_Value = ADCDH*256 + ADCDL;                   //读取AD值
  66   1        AD_Value >>= 4; 
  67   1        return AD_Value;
  68   1      }
  69          /*********************************************************************************************************
             -************
  70            本例程以P00为例，设置P00为不同模式，所有IO用法与P00相同。
  71          **********************************************************************************************************
             -***********/
  72          void main(void)
  73          {
  74   1      #if (SYSCLK_SRC == PLL)
                Sys_Clk_Set_PLL(PLL_Multiple);  //设置系统时钟为PLL，PLL_Multiple为倍频倍数
              #endif
  77   1        
  78   1      #ifdef UART0_EN
                Uart0_Initial(UART0_BAUTRATE);  //初始化UART0
              #endif
  81   1        
  82   1      #ifdef UART1_EN
  83   1        Uart1_Initial(UART1_BAUTRATE);  //初始化UART1
  84   1      #endif
  85   1      
  86   1        EA = 1;                         //开全局中断
  87   1      
  88   1      #ifdef PRINT_EN
  89   1        //uart_printf("GPIO Demo Code\n");
  90   1      #endif
  91   1      
  92   1      /**************************************************************************************************/
  93   1        //P00F = OUTPUT;    //P00设置为推挽输出模式
  94   1        uart_printf("start\n\r");
  95   1        
  96   1        P32F = OUTPUT;            //R
  97   1        P33F = OUTPUT;            //B
  98   1        P00F = OUTPUT;            //G
  99   1        
 100   1        P30F = OUTPUT;            //backlight
 101   1        P31F = OUTPUT;            //speak
 102   1        
 103   1        //NTC ADC start
 104   1        P13F = OUTPUT;//NTC VCC 
 105   1        P14F = P14_ADC4_SETTING;  //设置P14为ADC引脚功能
 106   1      
 107   1        //charge check
 108   1        P15F = INPUT;           //CHARG_CHECK
 109   1        
 110   1        //bat adc
 111   1        P16F = P16_ADC6_SETTING;  //设置P16为BAT ADC引脚功能
C51 COMPILER V9.56.0.0   MAIN                                                              08/03/2020 17:49:25 PAGE 3   

 112   1      
 113   1        
 114   1        P32=0;
 115   1        P33=0;
 116   1        P00=0;
 117   1        P30=0;
 118   1        P31=1;
 119   1        while(1)
 120   1        {
 121   2      
 122   2            
 123   2          uart_printf("get_bat_ad_value(%d)\n\r",get_bat_ad_value());
 124   2          uart_printf("get_ntc_ad_value(%d)\n\r",get_ntc_ad_value());
 125   2          
 126   2      
 127   2          Delay_ms(2000);
 128   2        }
 129   1        
 130   1        uart_printf("test2\n");
 131   1      /***********************************************************************************/   
 132   1      
 133   1      
 134   1      /***********************************************************************************/   
 135   1        P00F = INPUT;     //P00设置为输入模式
 136   1        while(1)
 137   1        {
 138   2          if(P00)
 139   2          {
 140   3      #ifdef PRINT_EN
 141   3            uart_printf("P00 Input High!\n");
 142   3      #endif
 143   3          }
 144   2          else
 145   2          {
 146   3      #ifdef PRINT_EN
 147   3            uart_printf("P00 Input Low!\n");
 148   3      #endif
 149   3          }
 150   2        }
 151   1      /***********************************************************************************/ 
 152   1        
 153   1        
 154   1        
 155   1      
 156   1      /***********************************************************************************/ 
 157   1        P00F = OUTPUT;            //P00设置为推挽输出模式
 158   1        P00C |= 0x80;             //P00使能高灌电流模式
 159   1      /***********************************************************************************/ 
 160   1      
 161   1        
 162   1      /***********************************************************************************/ 
 163   1        P00F = INPUT|PU_EN;       //P00设置为输入模式并使能上拉电阻
 164   1        P00C |= 0x20;             //上拉电阻选择为强上拉
 165   1      //  P00C &= ~0x20;          //上拉电阻选择为弱上拉
 166   1      /***********************************************************************************/
 167   1      
 168   1      
 169   1      
 170   1      /***********************************************************************************/ 
 171   1        P00F = INPUT|PD_EN;       //P00设置为输入模式并使能下拉电阻
 172   1        P00C |= 0x10;             //下拉电阻选择为强下拉
 173   1      //  P00C &= ~0x10;          //下拉电阻选择为弱下拉
C51 COMPILER V9.56.0.0   MAIN                                                              08/03/2020 17:49:25 PAGE 4   

 174   1      /***********************************************************************************/ 
 175   1      
 176   1      
 177   1      /***********************************************************************************/ 
 178   1        P00F = P00_COM0_SETTING;    //P00设置为COM引脚功能
 179   1      /***********************************************************************************/ 
 180   1        
 181   1        while(1)
 182   1        {
 183   2      
 184   2        }
 185   1      }
 186          #endif
*** WARNING C294 IN LINE 130 OF source\main.c: unreachable code
*** WARNING C294 IN LINE 157 OF source\main.c: unreachable code


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    241    ----
   CONSTANT SIZE    =     94    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
