C51 COMPILER V9.56.0.0   UART                                                              08/04/2020 11:17:00 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\hex\uart.obj
COMPILER INVOKED BY: F:\Keil\C51\BIN\C51.EXE Library\Sources\uart.c OMF2 OPTIMIZE(9,SIZE) BROWSE DEBUG PRINT(.\lst\uart.
                    -lst) TABS(2) OBJECT(.\hex\uart.obj)

line level    source

   1          #ifndef _UART_C_
   2          #define _UART_C_
   3          #include "ca51f_config.h"
   4          #include "includes\ca51f3sfr.h"
   5          #include "includes\ca51f3xsfr.h"
   6          #include "includes\gpiodef_f3.h"
   7          
   8          #include "includes\system.h"
   9          #include "Library\includes\uart.h"
  10          #include <intrins.h>
  11          #include <string.h>
  12          #include <stdarg.h>
  13          #include <stdlib.h>
  14          #include <stdio.h>
  15          #include <absacc.h>
  16          /*********************************************************************************************************
             -************/
  17          /*********************************************************************************************************
             -************/
  18          #ifdef UART0_EN
              void Uart0_Initial(unsigned long int baudrate)
              {
                unsigned int value_temp;
              
                GPIO_Init(P31F,P31_UART0_RX_SETTING);
                GPIO_Init(P30F,P30_UART0_TX_SETTING);
                
                uart0_send.head=0;
                uart0_send.tail=0;
                uart0_rev.head=0;
                uart0_rev.tail=0;
                uart0_tx_flag=0;
              
              /*********************************************************************************************************
             -***************/
              //TIMER2作为UART0的波特率发生器
                value_temp = 0x10000 - FOSC/(baudrate*32);
                T2CON =   0x24;
                T2CH  =   (unsigned char)(value_temp>>8);
                T2CL  =   (unsigned char)(value_temp);
                TH2   =   (unsigned char)(value_temp>>8);
                TL2   =   (unsigned char)(value_temp);; 
                TR2   =   1;
              /*********************************************************************************************************
             -***************/  
              
              
              /*********************************************************************************************************
             -***************/
              //TIMER1作为UART0的波特率发生器
              
              //  TMOD = (TMOD&0xCF)|0x20;
              //  TH1 = 0xff;   //19200
              //  TL1 = 0xff;
C51 COMPILER V9.56.0.0   UART                                                              08/04/2020 11:17:00 PAGE 2   

              //  ET1=0;
              //  TR1=1;    
              //  PCON |= 0x80;   
              /*********************************************************************************************************
             -***************/
                S0CON = 0x50;  
                ES0 = 1;
              }
              void Uart0_PutChar(unsigned char bdat)
              {
                unsigned char free_space;
                unsigned char tail_tmp;
              
                while(1)
                {       
                  tail_tmp = uart0_send.tail; 
                  if(uart0_send.head < tail_tmp)
                  {
                    free_space = tail_tmp - uart0_send.head;
                  }
                  else
                  {
                    free_space = UART0_TX_BUF_SIZE + tail_tmp - uart0_send.head;
                  }   
                  if(free_space > 1)
                  {
                    ES0 = 0; 
                    uart0_send.head++;
                    uart0_send.head %= UART0_TX_BUF_SIZE;
                    uart0_tx_buf[uart0_send.head] = bdat;     
                    if(!uart0_tx_flag)
                    {
                      ES0 = 1;        
                      uart0_send.tail++;
                      uart0_send.tail %= UART0_TX_BUF_SIZE;   
                      S0BUF=uart0_tx_buf[uart0_send.tail];        
                      uart0_tx_flag = 1;    
                    }
                    else
                    {
                      ES0 = 1;  
                    }     
                    break;
                  }
                }
              }
              void UART0_ISR (void) interrupt 4
              { 
                if(RI0)
                {
                  RI0 = 0;
                  uart0_rev.head++;
                  uart0_rev.head %= UART0_RX_BUF_SIZE;
                  uart0_rx_buf[uart0_rev.head]=S0BUF;
                }
                if(TI0)
                { 
                  TI0 = 0;    
                  if(uart0_send.head!=uart0_send.tail)
                  {
                    uart0_send.tail++;
                    uart0_send.tail %= UART0_TX_BUF_SIZE;
C51 COMPILER V9.56.0.0   UART                                                              08/04/2020 11:17:00 PAGE 3   

                    S0BUF=uart0_tx_buf[uart0_send.tail];        
                  }
                  else
                  {
                    uart0_tx_flag=0;
                  } 
                }
              }
              #endif
 120          #ifdef UART1_EN
              void Uart1_Initial(unsigned long int baudrate)
              {
                unsigned int value_temp;
              
                uart1_send.head=0;
                uart1_send.tail=0;
                uart1_rev.head=0;
                uart1_rev.tail=0;
                uart1_tx_flag=0;
              
                value_temp = 0x400 - FOSC/(baudrate*32);
              
                GPIO_Init(P11F,P11_UART1_TX_SETTING);
                GPIO_Init(P12F,P12_UART1_RX_SETTING);
                
                S1RELH = (unsigned char)(value_temp>>8);
                S1RELL = (unsigned char)(value_temp);
                
                S1CON = 0xD0;
                ES1 = 1;  
              }
              void Uart1_PutChar(unsigned char bdat)
              {
                unsigned char free_space;
                unsigned char tail_tmp;
              
                while(1)
                {   
                  tail_tmp = uart1_send.tail;
                  if(uart1_send.head < tail_tmp)
                  {
                    free_space = tail_tmp - uart1_send.head;
                  }
                  else
                  {
                    free_space = UART1_TX_BUF_SIZE + tail_tmp - uart1_send.head;
                  }   
                  if(free_space > 1)
                  {
                    ES1 = 0; 
                    uart1_send.head++;
                    uart1_send.head %= UART1_TX_BUF_SIZE;
                    uart1_tx_buf[uart1_send.head] = bdat;
                    if(!uart1_tx_flag)
                    {
                      ES1 = 1;
                      uart1_send.tail++;
                      uart1_send.tail %= UART1_TX_BUF_SIZE;   
                      S1BUF = uart1_tx_buf[uart1_send.tail];        
                      uart1_tx_flag = 1;    
                    }
                    else
C51 COMPILER V9.56.0.0   UART                                                              08/04/2020 11:17:00 PAGE 4   

                    {
                      ES1 = 1;  
                    }     
                    break;
                  }
                }
              }
              void UART1_ISR (void) interrupt 6 
              {
                if(S1CON & BIT0)
                {
                  S1CON = (S1CON&~(BIT0|BIT1))|BIT0;       
                  uart1_rev.head++;
                    uart1_rev.head %= UART1_RX_BUF_SIZE;
                  uart1_rx_buf[uart1_rev.head]=S1BUF;
                }
                if(S1CON & BIT1)
                {
                  S1CON = (S1CON&~(BIT0|BIT1))|BIT1;  
                  if(uart1_send.head!=uart1_send.tail)
                  {
                    uart1_send.tail++;
                    uart1_send.tail %= UART1_TX_BUF_SIZE;
                    S1BUF=uart1_tx_buf[uart1_send.tail];        
                  }
                  else
                  {
                    uart1_tx_flag=0;
                  }   
                }
              }
              #endif
 205          
 206          
 207          /*********************************************************************************************************
             -************/
 208          #endif
 209          char putchar (char c)
 210          {
 211   1        Uart1_PutChar(c);
 212   1        return 0;
 213   1      }
*** WARNING C280 IN LINE 209 OF Library\Sources\uart.c: 'c': unreferenced local variable
 214          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =      5    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
